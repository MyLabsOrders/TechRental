<UserControl xmlns="https://github.com/avaloniaui"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 xmlns:i="clr-namespace:Avalonia.Xaml.Interactivity;assembly=Avalonia.Xaml.Interactivity"
			 xmlns:ia="clr-namespace:Avalonia.Xaml.Interactions.Core;assembly=Avalonia.Xaml.Interactions"
			 xmlns:img="clr-namespace:Projektanker.Icons.Avalonia;assembly=Projektanker.Icons.Avalonia"
			 xmlns:vm="using:RentDesktop.ViewModels.Pages.UserWindowPages"
			 xmlns:models="clr-namespace:RentDesktop.Models;assembly=RentDesktop"
			 xmlns:converters="clr-namespace:RentDesktop.Infrastructure.Converters"
             mc:Ignorable="d"
			 d:DesignWidth="670" d:DesignHeight="475"
             x:Class="RentDesktop.Views.Pages.CartPage">

	<Design.DataContext>
		<vm:CartViewModel />
	</Design.DataContext>

	<Grid>
		<Grid ColumnDefinitions="1*, 200" IsVisible="{Binding IsCartPageVisible}">
			<ItemsControl Grid.Column="0" Items="{Binding Cart}">
				<ItemsControl.Styles>
					<Style Selector="Button">
						<Setter Property="Margin" Value="3" />
						<Setter Property="Width" Value="214" />
						<Setter Property="Height" Value="134" />
						<Setter Property="Padding" Value="0" />
						<Setter Property="Cursor" Value="Hand" />
						<Setter Property="BorderThickness" Value="1" />
						<Setter Property="BorderBrush" Value="LightGray" />
						<Setter Property="Background" Value="AliceBlue" />
						<Setter Property="HorizontalContentAlignment" Value="Stretch" />
					</Style>
				</ItemsControl.Styles>

				<ItemsControl.Template>
					<ControlTemplate>
						<ScrollViewer>
							<ItemsPresenter>
								<ItemsPresenter.ItemsPanel>
									<ItemsPanelTemplate>
										<WrapPanel ItemWidth="220" ItemHeight="140" />
									</ItemsPanelTemplate>
								</ItemsPresenter.ItemsPanel>
							</ItemsPresenter>
						</ScrollViewer>
					</ControlTemplate>
				</ItemsControl.Template>

				<ItemsControl.DataTemplates>
					<DataTemplate DataType="{x:Type models:TransportRent}">
						<Button Classes="cell"
								Command="{Binding DataContext.SelectTransportRentCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
								CommandParameter="{Binding Self}">
							<Grid RowDefinitions="1*, 30">
								<Button Width="25"
										Height="25"
										Opacity="0.7"
										Margin="0, 5, 5, 0"
										Background="#b7b7b7"
										VerticalAlignment="Top"
										HorizontalAlignment="Right"
										img:Attached.Icon="fa-times"
										Command="{Binding DataContext.RemoveFromCartCommand, RelativeSource={RelativeSource AncestorType=ItemsControl}}"
										CommandParameter="{Binding Self}" />

								<Border BorderBrush="DarkGray" BorderThickness="2" Background="White" Margin="5, 5, 35, 0">
									<Image Source="{Binding Transport.Icon}" MaxHeight="92" />
								</Border>

								<Grid Grid.Row="1" Margin="5, 0">
									<TextBlock Grid.Column="0"
											   VerticalAlignment="Center"
											   HorizontalAlignment="Left"
											   Text="{Binding Transport.Name}" />

									<TextBlock Grid.Column="0"
											   VerticalAlignment="Center"
											   HorizontalAlignment="Right"
											   Text="{Binding Transport.PricePresenter}" />
								</Grid>
							</Grid>
						</Button>
					</DataTemplate>
				</ItemsControl.DataTemplates>
			</ItemsControl>

			<Grid Grid.Column="1" Background="#E6E6E6" RowDefinitions="Auto, 1*, 30, 5, 30, 5">
				<Grid.Styles>
					<Style Selector="Button">
						<Setter Property="Width" Value="180" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
						<Setter Property="HorizontalAlignment" Value="Center" />
					</Style>
				</Grid.Styles>

				<Grid Grid.Row="0" RowDefinitions="160, 5, Auto, 1*" Margin="5">
					<Border Grid.Row="0" BorderBrush="Gray" BorderThickness="2">
						<Image MaxHeight="156" Source="{Binding SelectedTransportRent.Transport.Icon}" />
					</Border>

					<Grid Grid.Row="2" RowDefinitions="30, 30, 1*">
						<Grid.Styles>
							<Style Selector="TextBlock">
								<Setter Property="Margin" Value="0, 3, 0, 0" />
								<Setter Property="TextWrapping" Value="Wrap" />
							</Style>
						</Grid.Styles>

						<TextBlock Grid.Row="0" Text="{Binding SelectedTransportName}" />
						<TextBlock Grid.Row="1" Text="{Binding SelectedTransportPrice}" />

						<Grid Grid.Row="2" RowDefinitions="30, 10, 30, 1*" ColumnDefinitions="Auto, 5, 1*">
							<Grid.Styles>
								<Style Selector="TextBlock">
									<Setter Property="VerticalAlignment" Value="Center" />
								</Style>
							</Grid.Styles>

							<TextBlock Text="Дней" Grid.Row="0" Grid.Column="0" />

							<NumericUpDown Grid.Row="0"
										   Grid.Column="2"
										   Minimum="1"
										   IsEnabled="{Binding IsTransportRentSelected}"
										   Value="{Binding SelectedTransportRent.Days}">
								<i:Interaction.Behaviors>
									<ia:EventTriggerBehavior EventName="ValueChanged">
										<ia:InvokeCommandAction
											Command="{Binding UpdateTotalPriceCommand}"
											PassEventArgsToCommand="True" />
										<ia:InvokeCommandAction
											Command="{Binding UpdateInfoOnRelatedProductsCommand}"
											PassEventArgsToCommand="True" />
									</ia:EventTriggerBehavior>
								</i:Interaction.Behaviors>
							</NumericUpDown>

							<TextBlock Grid.Row="2" Grid.Column="0" Text="Итого" />
							<TextBox Grid.Row="2" Grid.Column="2" IsReadOnly="True" Text="{Binding TotalPrice}" />
						</Grid>
					</Grid>
				</Grid>

				<Button Grid.Row="2"
						Content="Оформить заказ"
						IsEnabled="{Binding IsCartNotEmpty}"
						Command="{Binding OpenOrderPlacingPageCommand}" />
				
				<Button Grid.Row="4"
						Content="Очистить корзину"
						IsEnabled="{Binding IsCartNotEmpty}"
						Command="{Binding ClearCartCommand}" />
			</Grid>
		</Grid>

		<Grid IsVisible="{Binding IsOrderPlacingPageVisible}"
			  RowDefinitions="30, 5, 30, 5, 30, 32, 30, 5, 30, 5, 30, 1*, 30, 5">

			<Grid.Styles>
				<Style Selector="TextBlock.header">
					<Setter Property="FontWeight" Value="DemiBold" />
					<Setter Property="HorizontalAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>
				
				<Style Selector="TextBlock">
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>
			</Grid.Styles>
			
			<TextBlock Grid.Row="0" Classes="header" Text="Данные покупателя" />

			<Grid Grid.Row="2" ColumnDefinitions="60, 5, 200">
				<TextBlock Grid.Column="0" Text="ФИО" />
				<TextBox Grid.Column="2" IsReadOnly="True" Text="{Binding UserName}" />
			</Grid>

			<Grid Grid.Row="4" ColumnDefinitions="60, 5, 200">
				<TextBlock Grid.Column="0" Text="Телефон" />
				
				<MaskedTextBox Grid.Column="2"
							   IsReadOnly="True"
							   Mask="8 (000) 000-0000"
							   Text="{Binding UserPhoneNumber}" />
			</Grid>

			<TextBlock Grid.Row="6" Classes="header" Text="Выберите способ оплаты" />

			<Grid Grid.Row="8" ColumnDefinitions="Auto, 5, 200">
				<TextBlock Grid.Column="0" Text="Способ оплаты" />
				
				<ComboBox Grid.Column="2"
						  Width="155"
						  Items="{Binding PaymentMethods}"
						  SelectedIndex="{Binding PaymentMethodIndex}" />
			</Grid>
			
			<CheckBox Grid.Row="10"
					  Name="PrivacyPolicyCheckBox"
					  Content="Принимаю условия политики конфиденциальности" />

			<Grid Grid.Row="12" ColumnDefinitions="1*, 120, 10, 120, 1*">
				<Grid.Styles>
					<Style Selector="Button">
						<Setter Property="HorizontalAlignment" Value="Stretch" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
					</Style>
				</Grid.Styles>
				
				<Button Grid.Column="1"
						Content="Отмена"
						Command="{Binding OpenCartPageCommand}" />
				
				<Button Grid.Column="3"
						Content="Продолжить"
						Command="{Binding OpenOrderPaymentPageCommand}"
						IsEnabled="{Binding ElementName=PrivacyPolicyCheckBox, Path=IsChecked}" />
			</Grid>
		</Grid>

		<Grid IsVisible="{Binding IsOrderPaymentPageVisible}" RowDefinitions="30, 1*, 40, 30, 5">
			<Grid.Styles>
				<Style Selector="TextBlock.header">
					<Setter Property="FontWeight" Value="DemiBold" />
					<Setter Property="HorizontalAlignment" Value="Center" />
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>

				<Style Selector="TextBlock">
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>

				<Style Selector="TextBlock.clickable">
					<Setter Property="Cursor" Value="Hand" />
					<Setter Property="VerticalAlignment" Value="Center" />
				</Style>

				<Style Selector="TextBlock.clickable:pointerover">
					<Setter Property="FontWeight" Value="SemiBold" />
					<Setter Property="Foreground" Value="DarkBlue" />
				</Style>
			</Grid.Styles>
			
			<TextBlock Grid.Row="0" Classes="header" Text="Вы собираетесь купить" />
			
			<ListBox Grid.Row="1" Items="{Binding Cart}">
				<ListBox.DataTemplates>
					<DataTemplate DataType="{x:Type models:TransportRent}">
						<TextBlock Text="{Binding Presenter}" />
					</DataTemplate>
				</ListBox.DataTemplates>
			</ListBox>

			<Grid Grid.Row="2" ColumnDefinitions="Auto, 5, 1*, Auto">
				<TextBlock Grid.Column="0" Text="Итого к оплате:" />
				<TextBlock Grid.Column="2" Text="{Binding TotalPrice}" />

				<Grid Grid.Column="3"
					  ColumnDefinitions="Auto, 10, Auto"
					  IsVisible="{Binding IsOrderPaidFor}">

					<TextBlock Grid.Column="0" Classes="clickable" Text="Скачать чек">
						<i:Interaction.Behaviors>
							<ia:EventTriggerBehavior EventName="PointerPressed">
								<ia:InvokeCommandAction Command="{Binding DownloadReceiptCommand}" />
							</ia:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</TextBlock>

					<TextBlock Grid.Column="2" Classes="clickable" Text="Скачать ведомость">
						<i:Interaction.Behaviors>
							<ia:EventTriggerBehavior EventName="PointerPressed">
								<ia:InvokeCommandAction Command="{Binding DownloadSummaryStatementCommand}" />
							</ia:EventTriggerBehavior>
						</i:Interaction.Behaviors>
					</TextBlock>
				</Grid>
			</Grid>

			<Grid Grid.Row="3" ColumnDefinitions="1*, 120, 10, 120, 1*">
				<Grid.Resources>
					<converters:InverseBoolConverter x:Key="inverseBoolConverter" />
				</Grid.Resources>
				
				<Grid.Styles>
					<Style Selector="Button">
						<Setter Property="HorizontalAlignment" Value="Stretch" />
						<Setter Property="HorizontalContentAlignment" Value="Center" />
					</Style>
				</Grid.Styles>

				<Button Grid.Column="1"
						Content="Закрыть"
						Command="{Binding CloseOrderPaymentPageCommand}" />

				<Button Grid.Column="3"
						Content="Оплатить"
						Command="{Binding PayOrderCommand}"
						IsEnabled="{Binding Path=IsOrderPaidFor, Converter={StaticResource inverseBoolConverter}}" />
			</Grid>
		</Grid>
	</Grid>

</UserControl>
